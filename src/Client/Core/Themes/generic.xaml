<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
  xmlns:fxui="clr-namespace:SilverlightFX.UserInterface;assembly=SilverlightFX"
  xmlns:fxdata="clr-namespace:SilverlightFX.Data;assembly=SilverlightFX"
  xmlns:fxnav="clr-namespace:SilverlightFX.UserInterface.Navigation;assembly=SilverlightFX">

  <!-- Label -->
  <Style TargetType="fxui:Label">
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="FontFamily" Value="Verdana" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="#000000" />
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:Label">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
            <TextBlock
              Text="{TemplateBinding Text}"
              FontFamily="{TemplateBinding FontFamily}" 
              FontSize="{TemplateBinding FontSize}"
              FontStretch="{TemplateBinding FontStretch}"
              FontStyle="{TemplateBinding FontStyle}" 
              FontWeight="{TemplateBinding FontWeight}"
              Foreground="{TemplateBinding Foreground}"
              TextAlignment="{TemplateBinding TextAlignment}"
              TextDecorations="{TemplateBinding TextDecorations}" 
              TextWrapping="{TemplateBinding TextWrapping}" />
            </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style TargetType="fxui:LinkLabel">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:LinkLabel">
          <fxui:WrapPanel x:Name="rootPanel" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Screen -->
  <Style TargetType="fxui:Screen">
    <Setter Property="Background" Value="White" />
    <Setter Property="FormBackground" Value="#20000000" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:Screen">
          <Grid x:Name="RootElement">
            <ContentPresenter x:Name="ViewPresenter" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- XBorder -->
  <Style TargetType="fxui:XBorder">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:XBorder">
          <Grid x:Name="NineGrid" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
              <RowDefinition Height="0"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="0"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Row="0" Grid.Column="0">
              <Rectangle.Fill>
                <RadialGradientBrush x:Name="TopLeftShadow">
                  <RadialGradientBrush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2" ScaleY="2"/>
                      <TranslateTransform X="0.5" Y="0.5"/>
                    </TransformGroup>
                  </RadialGradientBrush.RelativeTransform>
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Row="0" Grid.Column="1">
              <Rectangle.Fill>
                <LinearGradientBrush x:Name="TopShadow" EndPoint="0.5,0" StartPoint="0.5,1" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Column="2" Grid.Row="0">
              <Rectangle.Fill>
                <RadialGradientBrush x:Name="TopRightShadow">
                  <RadialGradientBrush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2" ScaleY="2"/>
                      <TranslateTransform X="-0.5" Y="0.5"/>
                    </TransformGroup>
                  </RadialGradientBrush.RelativeTransform>
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Row="1" Grid.Column="0">
              <Rectangle.Fill>
                <LinearGradientBrush x:Name="LeftShadow" EndPoint="0,0.5" StartPoint="1,0.5" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Row="1" Grid.Column="2">
              <Rectangle.Fill>
                <LinearGradientBrush x:Name="RightShadow" EndPoint="1,0.5" StartPoint="0,0.5" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Row="2" Grid.Column="0">
              <Rectangle.Fill>
                <RadialGradientBrush x:Name="BottomLeftShadow">
                  <RadialGradientBrush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2" ScaleY="2"/>
                      <TranslateTransform X="0.5" Y="-0.5"/>
                    </TransformGroup>
                  </RadialGradientBrush.RelativeTransform>
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Row="2" Grid.Column="1">
              <Rectangle.Fill>
                <LinearGradientBrush x:Name="BottomShadow" EndPoint="0.5,1" StartPoint="0.5,0" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Column="2" Grid.Row="2"  >
              <Rectangle.Fill>
                <RadialGradientBrush x:Name="BottomRightShadow">
                  <RadialGradientBrush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2" ScaleY="2"/>
                      <TranslateTransform X="-0.5" Y="-0.5"/>
                    </TransformGroup>
                  </RadialGradientBrush.RelativeTransform>
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.Column="1" Grid.Row="1">
              <Rectangle.Fill>
                <SolidColorBrush x:Name="BackgroundShadow" />
              </Rectangle.Fill>
            </Rectangle>
            <Border x:Name="Border" Grid.Column="1" Grid.Row="1"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ContentView -->
  <Style TargetType="fxui:ContentView">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:ContentView">
          <Grid>
            <ContentPresenter x:Name="BackPresenter"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <ContentPresenter x:Name="FrontPresenter"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- PageFrame -->
  <Style TargetType="fxnav:PageFrame">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxnav:PageFrame">
          <Grid>
            <fxui:ContentView x:Name="ContentView"
              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
              ContentTransition="{TemplateBinding Transition}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- ActivityControl -->
  <Style TargetType="fxui:ActivityControl">
    <Setter Property="CancelButtonStyle">
      <Setter.Value>
        <Style TargetType="Button">
          <Setter Property="Content" Value="Cancel" />
          <Setter Property="Margin" Value="0,4,0,0" />
          <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ProgressBarStyle">
      <Setter.Value>
        <Style TargetType="ProgressBar">
          <Setter Property="Height" Value="10" />
          <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="StatusLabelStyle">
      <Setter.Value>
        <Style TargetType="TextBlock">
          <Setter Property="Margin" Value="0,0,0,4" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:ActivityControl">
          <Border
            Background="{TemplateBinding Background}"
            Padding="{TemplateBinding Padding}"
            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <vsm:VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ProgressStates">
                <vsm:VisualState x:Name="Untracked" />
                <vsm:VisualState x:Name="Tracking">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="StatusStates">
                <vsm:VisualState x:Name="Empty" />
                <vsm:VisualState x:Name="Message">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="statusLabel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CancelStates">
                <vsm:VisualState x:Name="NonCancelable" />
                <vsm:VisualState x:Name="Cancelable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="cancelButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TextBlock x:Name="statusLabel" Style="{TemplateBinding StatusLabelStyle}"
                Visibility="Collapsed"
                DataContext="{TemplateBinding AsyncActivity}" Text="{Binding Message}" />
              <ProgressBar x:Name="progressBar" Style="{TemplateBinding ProgressBarStyle}"
                Grid.Row="1" IsIndeterminate="True" Visibility="Collapsed" />
              <Button x:Name="cancelButton" Style="{TemplateBinding CancelButtonStyle}"
                Grid.Row="2" Visibility="Collapsed"
                fxui:Interaction.Command="Cancel" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- DetailView -->
  <Style TargetType="fxui:DetailViewItem">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:DetailViewItem">
          <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="fxui:DetailView">
    <Setter Property="FontFamily" Value="Verdana" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:DetailView">
          <Grid x:Name="RootElement">
            <ContentControl
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}"
              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
              Padding="{TemplateBinding Padding}">
              <Grid x:Name="ItemPresenter" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ListView -->
  <Style TargetType="fxui:ListViewItem">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:ListViewItem">
          <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="fxui:ListView">
    <Setter Property="FontFamily" Value="Verdana" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxui:ListView">
          <Grid x:Name="RootElement">
            <StackPanel x:Name="ItemsPresenter" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- DataSource -->
  <Style TargetType="fxdata:DataSource">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="fxdata:DataSource">
          <Grid x:Name="RootElement">
            <vsm:VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ActivityStates">
                <vsm:VisualState x:Name="Idle" />
                <vsm:VisualState x:Name="Loading">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames
                      Storyboard.TargetName="activityPresenter" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="activityPresenter" Opacity="0"
              Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
